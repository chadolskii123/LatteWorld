/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.45
 * Generated at: 2019-11-09 06:20:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class userJoin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>라떼는 이렇게 회원가입 했어</title>\r\n");
      out.write("<style>\r\n");
      out.write("#mainTop{\r\n");
      out.write("\twidth : 85%;\r\n");
      out.write("\theight : 10%;\r\n");
      out.write("}\r\n");
      out.write("#mainTop *{\r\n");
      out.write("\tdisplay : inline-block;\r\n");
      out.write("\ttext-align : center;\r\n");
      out.write("\tvertical-align : middle;\r\n");
      out.write("}\r\n");
      out.write("#registerForm *{\r\n");
      out.write("width : 150px;\r\n");
      out.write("}\r\n");
      out.write("#topMenu{\r\n");
      out.write("position : relative;\r\n");
      out.write("left : 20%;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- 메인 탑 메뉴 -->\r\n");
      out.write("\t<div id = \"mainTop\">\r\n");
      out.write("\t\t<div id = \"topLogo\">\r\n");
      out.write("\t\t\t<image id = \"mainLogo\" width = \"100px\" height = \"100px\" src=\"../images/MainLogo.jpg\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div id = \"topMenu\">\r\n");
      out.write("\t\t\t<span><a>미니홈피</a></span>\r\n");
      out.write("\t\t\t<span><a>선물가게</a></span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div id = \"topIcon\"  style = \"float : right\"><input type = \"button\" value = \"BGM 상점\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t<div id = \"register\" align = \"center\">\r\n");
      out.write("\t\t<h1>회원 가입</h1>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<form id = \"registerForm\" method = \"post\" >\r\n");
      out.write("\t\t\t<label id = \"nameLabel\">이름</label>\r\n");
      out.write("\t\t\t<input id = \"userName\" type = \"text\" name = \"userName\" placeholder=\"이름 입력!!\"><br>\r\n");
      out.write("\t\t\t<label id = \"emailLabel\">이메일</label>\r\n");
      out.write("\t\t\t<input id = \"email\" type = \"text\" name = \"email1\" placeholder = \"이메일을 입력해주세요.\">\r\n");
      out.write("\t\t\t<select id = \"emailPick\" name = \"email2\">\r\n");
      out.write("\t\t\t\t<option>@naver.com</option>\r\n");
      out.write("\t\t\t\t<option>@daum.net</option>\r\n");
      out.write("\t\t\t\t<option>@gmail.com</option>\r\n");
      out.write("\t\t\t\t<option>직접 입력</option>\r\n");
      out.write("\t\t\t</select><br>\r\n");
      out.write("\t\t\t<input id = \"emailInsert\" type = \"text\" name = \"email2\" style = \"display : none\" placeholder = \"직접 입력해주세요.\">\r\n");
      out.write("\t\t\t<button type=\"button\" class=\"btn btn-primary btn-lg btn-block\" onclick=\"send_mail()\">인증번호 보내기</button><br>\r\n");
      out.write("\t\t\t<label id = \"emailAuthLabel\">이메일 인증번호 입력</label>\r\n");
      out.write("\t\t\t<input id =\"authCheck\" type =\"text\" placeholder=\"인증번호 입력!\"><br>\r\n");
      out.write("\t\t\t<label id = \"emailAuthCheck\" style = \"display : none\">인증번호가 일치하지 않습니다. 확인 해주세요.</label>\r\n");
      out.write("\t\t\t<label id = \"pwd1Label\">비밀번호</label>\r\n");
      out.write("\t\t\t<input id = \"userPwd1\" type = \"password\" name = \"userPwd1\" placeholder = \"비밀번호 입력!\"><br>\r\n");
      out.write("\t\t\t<label id = \"pwd1Check\" style = \"display : none\">비밀번호는 영문 대문자 + 영문 소문자 + 숫자 + 특수문자 조합으로 입력해주세요.(최대 20글자)</label>\r\n");
      out.write("\t\t\t<label id = \"pwd2Label\">비밀번호 확인</label>\r\n");
      out.write("\t\t\t<input id = \"userPwd2\" type = \"password\" name = \"userPwd2\" placeholder = \"비밀번호 확인!\"><br>\r\n");
      out.write("\t\t\t<label id = \"pwd2Check\" style = \"display : none\">일치하지 않습니다.</label>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<hr>\r\n");
      out.write("\t\t\t<label type = \"button\" value = \"reset\">초기화</label>\r\n");
      out.write("\t\t\t<label onclick = \"checkForm()\">가입하기</label>\r\n");
      out.write("\t\t</form>\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\tvar date;\r\n");
      out.write("\tvar authNo;\r\n");
      out.write("\tvar eamil;\r\n");
      out.write("\tfunction send_mail(){\r\n");
      out.write("\t\tvar email = document.getElementById(\"email\");\r\n");
      out.write("\t\tvar re = /^[a-zA-Z\\d]{8,15}$/;\r\n");
      out.write("\t\tif (!re.test(email.value)) {\r\n");
      out.write("            alert('이메일을 정확하게 입력해주세요.');\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(document.querySelector(\"#emailPick\").value == \"직접 입력\"){\r\n");
      out.write("\t\t\temail = $(\"#registerForm > input[name='email1']\").get(0).value + $(\"#registerForm > input[name='email2']\").get(0).value\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\temail = $(\"#registerForm > input[name='email1']\").get(0).value + document.querySelector(\"#emailPick\").value;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("        \turl : \"");
      out.print( request.getContextPath() );
      out.write("/RegisterCheckServlet\",\r\n");
      out.write("        \tdata : {email : email},\r\n");
      out.write("        \tsuccess : function(data){\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\tif(data[0] === 0){        \t\t\t\r\n");
      out.write("        \t\t\t$.ajax({\r\n");
      out.write("        \t\t\t\turl : \"");
      out.print( request.getContextPath());
      out.write("/mailAuth.ml\",\r\n");
      out.write("        \t\t\t\tdata : {email : email},\r\n");
      out.write("        \t\t\t\tsuccess : function(data){\r\n");
      out.write("        \t\t\t\t\tauthNo = data[0];\r\n");
      out.write("        \t\t\t\t\talert(\"인증번호가 발송 되었습니다.\");\r\n");
      out.write("        \t\t\t\t}\r\n");
      out.write("        \t\t\t});\r\n");
      out.write("        \t\t\t\r\n");
      out.write("        \t\t}else{\r\n");
      out.write("        \t\t\talert(\"중복되는 아이디가 있습니다. 다른 이메일을 입력해주세요.\")\r\n");
      out.write("        \t\t\tdocument.getElementById(\"email\").value = '';\r\n");
      out.write("        \t\t\t$(\"#email\").focus();\r\n");
      out.write("        \t\t\treturn false;\r\n");
      out.write("        \t\t}\r\n");
      out.write("        \t}\r\n");
      out.write("        });\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#authCheck\").change(function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(authNo == null){\r\n");
      out.write("\t\t\talert(\"이메일 인증번호 받기를 먼저 진행해주세요.\");\r\n");
      out.write("\t\t\tdocument.querySelector(\"#authCheck\").value = '';\r\n");
      out.write("\t\t\t$(\"#authCheck\").focus();\r\n");
      out.write("\t\t}else if(document.querySelector(\"#authCheck\").value != authNo){\r\n");
      out.write("\t\t\t$(\"#emailAuthCheck\").css({\"display\":\"block\", \"color\":\"red\",\"width\":\"auto\"}).text(\"인증번호가 일치하지 않습니다. 확인 해주세요.\");\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$(\"#emailAuthCheck\").css({\"display\":\"block\", \"color\":\"blue\",\"width\":\"auto\"}).text(\"인증번호 일치!\");\r\n");
      out.write("\t\t\tif(document.querySelector(\"#emailPick\").value == \"직접 입력\"){\r\n");
      out.write("\t\t\t\t$(\"#emailPick\").prop(\"disabled\",\"true\")\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t$(\"#emailPick\").change(function(){\t\r\n");
      out.write("\t\tif(document.querySelector(\"#emailPick\").value == \"직접 입력\"){\r\n");
      out.write("\t\t\t$(\"#emailInsert\").css(\"display\",\"block\");\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$(\"#emailInsert\").css(\"display\",\"none\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\tfunction checkForm(){\r\n");
      out.write("            var passwd = document.getElementById(\"userPwd1\");\r\n");
      out.write("            var passwd2 = document.getElementById(\"userPwd2\");\r\n");
      out.write("\t\t\tvar userName = document.getElementById(\"userName\");\r\n");
      out.write("            var emailAuth = document.getElementById(\"authCheck\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar re = /^[가-힣]{2,15}$/;\r\n");
      out.write("            if(!re.test(userName.value)){\r\n");
      out.write("            \talert(\"이름은 2~15글자의 한글이어야 합니다.\")\r\n");
      out.write("            \tuserName.select();\r\n");
      out.write("            \treturn false;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            if(authNo != null){\r\n");
      out.write("            \tif(!(document.querySelector(\"#emailAuthCheck\").textContent == \"인증번호 일치!\")){\r\n");
      out.write("            \t\talert(\"인증번호가 일치하지 않습니다. 다시 확인 해주세요.\");\r\n");
      out.write("            \t\tdocument.querySelector(\"#emailAuthCheck\").select()\r\n");
      out.write("            \t\treturn false;\r\n");
      out.write("            \t}\r\n");
      out.write("            }else{\r\n");
      out.write("            \talert(\"이메일은 아이디로 사용됩니다. 꼭 인증 절차를 거쳐 주세요.\");\r\n");
      out.write("            \treturn false;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            var re = /^[a-zA-Z!-)\\d]{8,15}$/;\r\n");
      out.write("            if (!re.test(passwd.value)) {\r\n");
      out.write("                alert('암호는 영문자와 숫자, !~)까지의 특수문자로 8글자이상 15글자 이하로 입력하세요'); //정규식과 일치하지 않는다면\r\n");
      out.write("                passwd.select();\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            if (passwd.value != passwd2.value) {\r\n");
      out.write("                alert(\"암호와 암호 확인 값이 일치하지 않습니다.\");\r\n");
      out.write("                passwd2.select();\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            $(\"#registerForm\").attr(\"action\",\"");
      out.print(request.getContextPath() );
      out.write("/registerUserServlet\").submit();\r\n");
      out.write("            return true; //전송 처리\r\n");
      out.write("        };\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
